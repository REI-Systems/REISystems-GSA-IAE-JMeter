<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="RECORD 02-17-21 1.19.15 PM" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.2.3.17. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;88&quot;, &quot;Google Chrome&quot;;v=&quot;88&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.150 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">dap.digitalgov.gov</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">www.google-analytics.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">js-agent.newrelic.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">bam.nr-data.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">5</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <longProp name="ThreadGroup.start_time">1613746010000</longProp>
        <longProp name="ThreadGroup.end_time">1613746010000</longProp>
      </ThreadGroup>
      <hashTree>
        <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
          <stringProp name="TestPlan.comments">
load
per sec 	5
per min 	300
1/15 	20</stringProp>
          <intProp name="calcMode">0</intProp>
          <doubleProp>
            <name>throughput</name>
            <value>20.0</value>
            <savedValue>0.0</savedValue>
          </doubleProp>
        </ConstantThroughputTimer>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Workspace" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/workspace" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">workspace</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dap.digitalgov.gov/Universal-Federated-Analytics-Min.js?agency=GSA" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="agency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">agency</stringProp>
                  <stringProp name="Argument.value">GSA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Universal-Federated-Analytics-Min.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/styles.adde9692203aafd66aca.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">styles.adde9692203aafd66aca.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/runtime-es2015.d2518c732178d64e5558.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">runtime-es2015.d2518c732178d64e5558.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/polyfills-es2015.4a39b81c52ca472bd901.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">polyfills-es2015.4a39b81c52ca472bd901.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/vendor-es2015.01260fd7ce9427bdb360.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">vendor-es2015.01260fd7ce9427bdb360.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/main-es2015.92d41108431189847c81.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">main-es2015.92d41108431189847c81.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/scripts.30a7ac595e551b355240.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">scripts.30a7ac595e551b355240.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.google-analytics.com/analytics.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">analytics.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.google-analytics.com/j/collect?v=1&amp;_v=j88&amp;aip=1&amp;a=91106540&amp;t=pageview&amp;_s=1&amp;dl=https%3A%2F%2F100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov%2Fworkspace&amp;dr=https%3A%2F%2Fidp.int.identitysandbox.gov%2F&amp;dp=%2Fworkspace&amp;ul=en-us&amp;de=UTF-8&amp;dt=beta.SAM.gov&amp;sd=30-bit&amp;sr=1680x1050&amp;vp=1680x863&amp;je=0&amp;_u=QAGAAQABAAAAAC~&amp;jid=705964309&amp;gjid=146265424&amp;cid=1506870167.1610999633&amp;tid=UA-33523145-1&amp;_gid=375145963.1613418207&amp;_r=1&amp;cd1=GSA&amp;cd2=GSA%20-%20100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov&amp;cd3=20181010%20v4.1%20-%20Universal%20Analytics&amp;cd4=unspecified%3A100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov&amp;cd5=unspecified%3A100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov&amp;cd6=https%3A%2F%2Fdap.digitalgov.gov%2FUniversal-Federated-Analytics-Min.js&amp;cd7=https%3A&amp;z=1691517299" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="de" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">de</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="jid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jid</stringProp>
                  <stringProp name="Argument.value">705964309</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl</stringProp>
                  <stringProp name="Argument.value">https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/workspace</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dp</stringProp>
                  <stringProp name="Argument.value">/workspace</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dr</stringProp>
                  <stringProp name="Argument.value">https://idp.int.identitysandbox.gov/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="gjid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gjid</stringProp>
                  <stringProp name="Argument.value">146265424</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">UA-33523145-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dt</stringProp>
                  <stringProp name="Argument.value">beta.SAM.gov</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sd</stringProp>
                  <stringProp name="Argument.value">30-bit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value">en-us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1680x1050</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">91106540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_gid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_gid</stringProp>
                  <stringProp name="Argument.value">375145963.1613418207</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cd2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cd2</stringProp>
                  <stringProp name="Argument.value">GSA - 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cd1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cd1</stringProp>
                  <stringProp name="Argument.value">GSA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cd4" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cd4</stringProp>
                  <stringProp name="Argument.value">unspecified:100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_r" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_r</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cd3" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cd3</stringProp>
                  <stringProp name="Argument.value">20181010 v4.1 - Universal Analytics</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">pageview</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_s</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cd6" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cd6</stringProp>
                  <stringProp name="Argument.value">https://dap.digitalgov.gov/Universal-Federated-Analytics-Min.js</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cd5" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cd5</stringProp>
                  <stringProp name="Argument.value">unspecified:100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_u" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_u</stringProp>
                  <stringProp name="Argument.value">QAGAAQABAAAAAC~</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_v</stringProp>
                  <stringProp name="Argument.value">j88</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cd7" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cd7</stringProp>
                  <stringProp name="Argument.value">https:</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vp</stringProp>
                  <stringProp name="Argument.value">1680x863</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="z" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">z</stringProp>
                  <stringProp name="Argument.value">1691517299</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="je" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">je</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">1506870167.1610999633</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">j/collect</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/fonts/sourcesanspro-regular-webfont.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/fonts/sourcesanspro-regular-webfont.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/sourcesanspro-regular-webfont.e7bccfa631a0017f31da.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sourcesanspro-regular-webfont.e7bccfa631a0017f31da.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/fonts/sourcesanspro-regular-webfont.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/fonts/sourcesanspro-regular-webfont.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/sourcesanspro-regular-webfont.e7bccfa631a0017f31da.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sourcesanspro-regular-webfont.e7bccfa631a0017f31da.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/iam/rms/v3/session?random=1613586058583" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586058583</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/iam/rms/v3/session</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/cms/feature/v1/read/FBO?random=1613586058617" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586058617</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/cms/feature/v1/read/FBO</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/watchlistservice/v1/api/toggle/enablecontractdata?random=1613586058618" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586058618</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/watchlistservice/v1/api/toggle/enablecontractdata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/feeds/v1/requests?random=1613586058626&amp;feedTypeId=2&amp;sortBy=reqDate&amp;order=desc&amp;limit=5&amp;pgNum=1&amp;skip=true&amp;enableCountForShowingAllRequests=1&amp;statIds=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586058626</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pgNum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pgNum</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="enableCountForShowingAllRequests" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">enableCountForShowingAllRequests</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sortBy</stringProp>
                  <stringProp name="Argument.value">reqDate</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="skip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">skip</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="feedTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">feedTypeId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="order" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order</stringProp>
                  <stringProp name="Argument.value">desc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="statIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">statIds</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/feeds/v1/requests</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/feeds/v1/notifications?random=1613586058629&amp;feedTypeId=3,4,5&amp;sortBy=reqDate&amp;order=desc&amp;limit=5&amp;pgNum=1&amp;alertStatus=active" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="alertStatus" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alertStatus</stringProp>
                  <stringProp name="Argument.value">active</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586058629</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pgNum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pgNum</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sortBy</stringProp>
                  <stringProp name="Argument.value">reqDate</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="feedTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">feedTypeId</stringProp>
                  <stringProp name="Argument.value">3,4,5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="order" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order</stringProp>
                  <stringProp name="Argument.value">desc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/feeds/v1/notifications</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/feedback/v1/question?random=1613586058632&amp;status=active" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586058632</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">active</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/feedback/v1/question</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/fonts/sourcesanspro-semibold-webfont.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/fonts/sourcesanspro-semibold-webfont.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/fonts/sourcesanspro-italic-webfont.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/fonts/sourcesanspro-italic-webfont.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/0-es2015.98056d7cb5feaf4d1750.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">0-es2015.98056d7cb5feaf4d1750.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/2-es2015.fa64428d233bbb3285be.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">2-es2015.fa64428d233bbb3285be.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/4-es2015.5b68e499f81b0266d11c.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">4-es2015.5b68e499f81b0266d11c.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/3-es2015.b893ed9e3e2abcc8dfbb.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">3-es2015.b893ed9e3e2abcc8dfbb.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/7-es2015.a327eba2d426909a8846.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">7-es2015.a327eba2d426909a8846.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/8-es2015.1c18c2d134bfc6b158ca.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">8-es2015.1c18c2d134bfc6b158ca.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/5-es2015.c8c62ebb391a6bb1d4a3.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">5-es2015.c8c62ebb391a6bb1d4a3.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/6-es2015.40dd786a507a30cf6b56.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">6-es2015.40dd786a507a30cf6b56.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/9-es2015.3855cb5264fb76b1bbf5.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">9-es2015.3855cb5264fb76b1bbf5.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/10-es2015.b7fc0f7037f41103891c.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">10-es2015.b7fc0f7037f41103891c.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/15-es2015.13a5245f99b06efcea28.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">15-es2015.13a5245f99b06efcea28.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/12-es2015.a8a734a4ca84690a6ce6.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">12-es2015.a8a734a4ca84690a6ce6.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/13-es2015.403c729ac0ca8df57c79.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">13-es2015.403c729ac0ca8df57c79.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/18-es2015.bea71935bb1220de17e1.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">18-es2015.bea71935bb1220de17e1.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/17-es2015.0ed32b233991382ab129.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">17-es2015.0ed32b233991382ab129.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/20-es2015.6025206d97182847df9e.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">20-es2015.6025206d97182847df9e.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/19-es2015.c1931ed2e2cdb3387768.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">19-es2015.c1931ed2e2cdb3387768.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/21-es2015.9e7ddf277a4bc5e9216a.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">21-es2015.9e7ddf277a4bc5e9216a.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/common-es2015.5ce6f5de607294bc0b3f.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">common-es2015.5ce6f5de607294bc0b3f.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/52-es2015.87def478da733e68b23c.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">52-es2015.87def478da733e68b23c.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/img/us_flag_small.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/img/us_flag_small.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/img/sam-logo.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/img/sam-logo.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/fonts/sourcesanspro-semibold-webfont.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/fonts/sourcesanspro-semibold-webfont.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/fonts/sourcesanspro-italic-webfont.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/fonts/sourcesanspro-italic-webfont.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/role/feature/v1/read/nonfed_role_mgmt_fe?random=1613586060707" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586060707</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/role/feature/v1/read/nonfed_role_mgmt_fe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://js-agent.newrelic.com/nr-spa-1153.min.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">nr-spa-1153.min.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/favicon.ico" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/favicon.ico</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bam.nr-data.net/1/NRJS-5e87c0af8c9a813f03b?a=270637501&amp;sa=1&amp;v=1153.61ee9ba&amp;t=Unnamed%20Transaction&amp;rst=5146&amp;ref=https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/workspace&amp;be=230&amp;fe=5070&amp;dc=3043&amp;af=err,xhr,stn,ins,spa&amp;perf=%7B%22timing%22:%7B%22of%22:1613586055642,%22n%22:0,%22u%22:76,%22ue%22:76,%22f%22:2,%22dn%22:2,%22dne%22:2,%22c%22:2,%22ce%22:2,%22rq%22:11,%22rp%22:65,%22rpe%22:79,%22dl%22:79,%22di%22:262,%22ds%22:3042,%22de%22:3043,%22dc%22:5069,%22l%22:5069,%22le%22:5071%7D,%22navigation%22:%7B%22ty%22:1%7D%7D&amp;fp=776&amp;fcp=776&amp;jsonp=NREUM.setToken" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">270637501</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="be" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">be</stringProp>
                  <stringProp name="Argument.value">230</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsonp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsonp</stringProp>
                  <stringProp name="Argument.value">NREUM.setToken</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="af" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">af</stringProp>
                  <stringProp name="Argument.value">err,xhr,stn,ins,spa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fp</stringProp>
                  <stringProp name="Argument.value">776</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sa</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rst</stringProp>
                  <stringProp name="Argument.value">5146</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/workspace</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fcp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fcp</stringProp>
                  <stringProp name="Argument.value">776</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">Unnamed Transaction</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1153.61ee9ba</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="perf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">perf</stringProp>
                  <stringProp name="Argument.value">{&quot;timing&quot;:{&quot;of&quot;:1613586055642,&quot;n&quot;:0,&quot;u&quot;:76,&quot;ue&quot;:76,&quot;f&quot;:2,&quot;dn&quot;:2,&quot;dne&quot;:2,&quot;c&quot;:2,&quot;ce&quot;:2,&quot;rq&quot;:11,&quot;rp&quot;:65,&quot;rpe&quot;:79,&quot;dl&quot;:79,&quot;di&quot;:262,&quot;ds&quot;:3042,&quot;de&quot;:3043,&quot;dc&quot;:5069,&quot;l&quot;:5069,&quot;le&quot;:5071},&quot;navigation&quot;:{&quot;ty&quot;:1}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fe</stringProp>
                  <stringProp name="Argument.value">5070</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dc</stringProp>
                  <stringProp name="Argument.value">3043</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">1/NRJS-5e87c0af8c9a813f03b</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bam.nr-data.net/resources/1/NRJS-5e87c0af8c9a813f03b?a=270637501&amp;sa=1&amp;v=1153.61ee9ba&amp;t=Unnamed%20Transaction&amp;rst=5229&amp;ref=https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/workspace&amp;st=1613586055642" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;navigationStart&quot;,&quot;s&quot;:0,&quot;e&quot;:0,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;unloadEventStart&quot;,&quot;s&quot;:76,&quot;e&quot;:76,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;unloadEventEnd&quot;,&quot;s&quot;:76,&quot;e&quot;:76,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fetchStart&quot;,&quot;s&quot;:2,&quot;e&quot;:2,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domainLookupStart&quot;,&quot;s&quot;:2,&quot;e&quot;:2,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domainLookupEnd&quot;,&quot;s&quot;:2,&quot;e&quot;:2,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;connectStart&quot;,&quot;s&quot;:2,&quot;e&quot;:2,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;connectEnd&quot;,&quot;s&quot;:2,&quot;e&quot;:2,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;requestStart&quot;,&quot;s&quot;:11,&quot;e&quot;:11,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;responseStart&quot;,&quot;s&quot;:65,&quot;e&quot;:65,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;responseEnd&quot;,&quot;s&quot;:79,&quot;e&quot;:79,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domLoading&quot;,&quot;s&quot;:79,&quot;e&quot;:79,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domInteractive&quot;,&quot;s&quot;:262,&quot;e&quot;:262,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domContentLoadedEventStart&quot;,&quot;s&quot;:3042,&quot;e&quot;:3042,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domContentLoadedEventEnd&quot;,&quot;s&quot;:3043,&quot;e&quot;:3043,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domComplete&quot;,&quot;s&quot;:5069,&quot;e&quot;:5069,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;loadEventStart&quot;,&quot;s&quot;:5069,&quot;e&quot;:5069,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;loadEventEnd&quot;,&quot;s&quot;:5071,&quot;e&quot;:5071,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:93,&quot;e&quot;:158,&quot;o&quot;:&quot;https://dap.digitalgov.gov:443/Universal-Federated-Analytics-Min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:94,&quot;e&quot;:176,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/runtime-es2015.d2518c732178d64e5558.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:94,&quot;e&quot;:558,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/polyfills-es2015.4a39b81c52ca472bd901.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:94,&quot;e&quot;:1447,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/scripts.30a7ac595e551b355240.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:94,&quot;e&quot;:2723,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/vendor-es2015.01260fd7ce9427bdb360.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:94,&quot;e&quot;:791,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/main-es2015.92d41108431189847c81.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:265,&quot;e&quot;:465,&quot;o&quot;:&quot;https://www.google-analytics.com:443/analytics.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3030,&quot;e&quot;:3484,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/0-es2015.98056d7cb5feaf4d1750.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3031,&quot;e&quot;:3505,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/2-es2015.fa64428d233bbb3285be.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3031,&quot;e&quot;:3650,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/4-es2015.5b68e499f81b0266d11c.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3032,&quot;e&quot;:4715,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/3-es2015.b893ed9e3e2abcc8dfbb.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3032,&quot;e&quot;:4699,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/7-es2015.a327eba2d426909a8846.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3032,&quot;e&quot;:3619,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/8-es2015.1c18c2d134bfc6b158ca.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3033,&quot;e&quot;:3759,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/5-es2015.c8c62ebb391a6bb1d4a3.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3033,&quot;e&quot;:4743,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/6-es2015.40dd786a507a30cf6b56.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3034,&quot;e&quot;:3784,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/9-es2015.3855cb5264fb76b1bbf5.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3034,&quot;e&quot;:3805,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/10-es2015.b7fc0f7037f41103891c.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3034,&quot;e&quot;:3909,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/15-es2015.13a5245f99b06efcea28.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3035,&quot;e&quot;:3889,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/12-es2015.a8a734a4ca84690a6ce6.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3035,&quot;e&quot;:5024,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/13-es2015.403c729ac0ca8df57c79.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3035,&quot;e&quot;:4083,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/18-es2015.bea71935bb1220de17e1.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3036,&quot;e&quot;:4104,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/17-es2015.0ed32b233991382ab129.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3036,&quot;e&quot;:4182,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/20-es2015.6025206d97182847df9e.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3036,&quot;e&quot;:4162,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/19-es2015.c1931ed2e2cdb3387768.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3037,&quot;e&quot;:4510,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/21-es2015.9e7ddf277a4bc5e9216a.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3037,&quot;e&quot;:4259,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/common-es2015.5ce6f5de607294bc0b3f.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:3038,&quot;e&quot;:4411,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/52-es2015.87def478da733e68b23c.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:5069,&quot;e&quot;:5139,&quot;o&quot;:&quot;https://js-agent.newrelic.com:443/nr-spa-1153.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:5146,&quot;e&quot;:5226,&quot;o&quot;:&quot;https://bam.nr-data.net:443/1/NRJS-5e87c0af8c9a813f03b&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;link&quot;,&quot;s&quot;:93,&quot;e&quot;:679,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/styles.adde9692203aafd66aca.css&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:485,&quot;e&quot;:503,&quot;o&quot;:&quot;https://www.google-analytics.com:443/j/collect&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:2945,&quot;e&quot;:3560,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:2975,&quot;e&quot;:3515,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/cms/feature/v1/read/FBO&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:2978,&quot;e&quot;:3308,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/watchlistservice/v1/api/toggle/enablecontractdata&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:2985,&quot;e&quot;:3347,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:2987,&quot;e&quot;:3376,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:2992,&quot;e&quot;:3615,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feedback/v1/question&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:775,&quot;e&quot;:852,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/assets/fonts/sourcesanspro-regular-webfont.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:776,&quot;e&quot;:906,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/sourcesanspro-regular-webfont.e7bccfa631a0017f31da.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:3019,&quot;e&quot;:3737,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/assets/fonts/sourcesanspro-semibold-webfont.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:3020,&quot;e&quot;:3404,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/assets/fonts/sourcesanspro-italic-webfont.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:3040,&quot;e&quot;:4468,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/assets/img/us_flag_small.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:3041,&quot;e&quot;:4562,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/assets/img/sam-logo.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;other&quot;,&quot;s&quot;:5085,&quot;e&quot;:5159,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/assets/favicon.ico&quot;,&quot;t&quot;:&quot;resource&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">resources/1/NRJS-5e87c0af8c9a813f03b?a=270637501&amp;sa=1&amp;v=1153.61ee9ba&amp;t=Unnamed%20Transaction&amp;rst=5229&amp;ref=https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/workspace&amp;st=1613586055642</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/iam/rms/v3/session?random=1613586061025" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061025</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/iam/rms/v3/session</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/rms/v1/userprofile/narayan.acharya@gsa.gov/?random=1613586061409&amp;fetchWidget=true" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061409</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fetchWidget" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fetchWidget</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/rms/v1/userprofile/narayan.acharya@gsa.gov/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/feeds/v1/requests?random=1613586061840&amp;feedTypeId=2&amp;sortBy=reqDate&amp;order=desc&amp;limit=5&amp;pgNum=1&amp;skip=true&amp;enableCountForShowingAllRequests=1&amp;statIds=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061840</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pgNum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pgNum</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="enableCountForShowingAllRequests" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">enableCountForShowingAllRequests</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sortBy</stringProp>
                  <stringProp name="Argument.value">reqDate</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="skip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">skip</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="feedTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">feedTypeId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="order" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order</stringProp>
                  <stringProp name="Argument.value">desc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="statIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">statIds</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/feeds/v1/requests</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/feeds/v1/notifications?random=1613586061842&amp;feedTypeId=3,4,5&amp;sortBy=reqDate&amp;order=desc&amp;limit=5&amp;pgNum=1&amp;alertStatus=active" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="alertStatus" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alertStatus</stringProp>
                  <stringProp name="Argument.value">active</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061842</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pgNum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pgNum</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sortBy</stringProp>
                  <stringProp name="Argument.value">reqDate</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="feedTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">feedTypeId</stringProp>
                  <stringProp name="Argument.value">3,4,5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="order" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order</stringProp>
                  <stringProp name="Argument.value">desc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/feeds/v1/notifications</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/alert/v2/alerts?random=1613586061845&amp;limit=1&amp;offset=0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061845</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="offset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">offset</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/alert/v2/alerts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/federalorganizations/feature/v1/read/CREATEOFFICEENABLED?random=1613586061853" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061853</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/federalorganizations/feature/v1/read/CREATEOFFICEENABLED</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/role/feature/v1/read/nonfed_role_mgmt_fe?random=1613586061854" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061854</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/role/feature/v1/read/nonfed_role_mgmt_fe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/rms/v1/widget/?random=1613586061864" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061864</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/rms/v1/widget/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/feeds/v1/feedCounts?random=1613586061867&amp;requestType=1&amp;status=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061867</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="requestType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">requestType</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/feeds/v1/feedCounts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/federalorganizations/v2/FHWidget?random=1613586061880&amp;days=90" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061880</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="days" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">days</stringProp>
                  <stringProp name="Argument.value">90</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/federalorganizations/v2/FHWidget</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/federalorganizations/v1/organizations/type?random=1613586061883" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061883</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/federalorganizations/v1/organizations/type</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/opps/v2/opportunities?random=1613586061890&amp;size=0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061890</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/opps/v2/opportunities</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/opps/v2/facets?random=1613586061891&amp;keyword=&amp;orgStatus=active&amp;status=&amp;noticeType=&amp;organizationId=&amp;postedFrom=&amp;postedTo=&amp;responseFrom=&amp;responseTo=&amp;archivedFrom=&amp;archivedTo=&amp;ids=status" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="responseFrom" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">responseFrom</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="noticeType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">noticeType</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="postedFrom" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">postedFrom</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="orgStatus" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">orgStatus</stringProp>
                  <stringProp name="Argument.value">active</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="organizationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">organizationId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061891</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="archivedTo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">archivedTo</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ids" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ids</stringProp>
                  <stringProp name="Argument.value">status</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="keyword" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">keyword</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="postedTo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">postedTo</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="archivedFrom" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">archivedFrom</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="responseTo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">responseTo</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/opps/v2/facets</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/wdol/v1/cba?random=1613586061894&amp;size=0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/wdol/v1/cba</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/rms/v1/requestaccess/roles/?random=1613586061904" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061904</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/rms/v1/requestaccess/roles/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/federalorganizations/v1/organizations/100006688?random=1613586061896&amp;sort=name&amp;mode=slim" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mode</stringProp>
                  <stringProp name="Argument.value">slim</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061896</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sort" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sort</stringProp>
                  <stringProp name="Argument.value">name</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/federalorganizations/v1/organizations/100006688</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/federalorganizations/v1/organizations/100006688?random=1613586061896&amp;sort=name&amp;mode=slim" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mode</stringProp>
                  <stringProp name="Argument.value">slim</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061896</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sort" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sort</stringProp>
                  <stringProp name="Argument.value">name</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/federalorganizations/v1/organizations/100006688</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/feeds/v1/requests?random=1613586061898&amp;feedTypeId=2&amp;sortBy=reqDate&amp;order=desc&amp;limit=5&amp;pgNum=1&amp;skip=true&amp;statIds=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061898</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pgNum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pgNum</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sortBy</stringProp>
                  <stringProp name="Argument.value">reqDate</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="skip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">skip</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="feedTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">feedTypeId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="order" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order</stringProp>
                  <stringProp name="Argument.value">desc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="statIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">statIds</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/feeds/v1/requests</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/feeds/v1/requests?random=1613586061898&amp;feedTypeId=2&amp;sortBy=reqDate&amp;order=desc&amp;limit=5&amp;pgNum=1&amp;skip=true&amp;statIds=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061898</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pgNum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pgNum</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sortBy</stringProp>
                  <stringProp name="Argument.value">reqDate</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="skip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">skip</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="feedTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">feedTypeId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="order" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order</stringProp>
                  <stringProp name="Argument.value">desc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="statIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">statIds</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/feeds/v1/requests</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/feeds/v1/requests?random=1613586061898&amp;feedTypeId=2&amp;sortBy=reqDate&amp;order=desc&amp;limit=5&amp;pgNum=1&amp;skip=true&amp;statIds=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061898</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pgNum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pgNum</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sortBy</stringProp>
                  <stringProp name="Argument.value">reqDate</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="skip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">skip</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="feedTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">feedTypeId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="order" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order</stringProp>
                  <stringProp name="Argument.value">desc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="statIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">statIds</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/feeds/v1/requests</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/feeds/v1/notifications?random=1613586061899&amp;feedTypeId=3,4,5&amp;sortBy=reqDate&amp;order=desc&amp;limit=5&amp;pgNum=1&amp;alertStatus=active" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="alertStatus" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alertStatus</stringProp>
                  <stringProp name="Argument.value">active</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061899</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pgNum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pgNum</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sortBy</stringProp>
                  <stringProp name="Argument.value">reqDate</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="feedTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">feedTypeId</stringProp>
                  <stringProp name="Argument.value">3,4,5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="order" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order</stringProp>
                  <stringProp name="Argument.value">desc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/feeds/v1/notifications</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/feeds/v1/notifications?random=1613586061899&amp;feedTypeId=3,4,5&amp;sortBy=reqDate&amp;order=desc&amp;limit=5&amp;pgNum=1&amp;alertStatus=active" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="alertStatus" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alertStatus</stringProp>
                  <stringProp name="Argument.value">active</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061899</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pgNum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pgNum</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sortBy</stringProp>
                  <stringProp name="Argument.value">reqDate</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="feedTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">feedTypeId</stringProp>
                  <stringProp name="Argument.value">3,4,5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="order" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order</stringProp>
                  <stringProp name="Argument.value">desc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/feeds/v1/notifications</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/feeds/v1/notifications?random=1613586061899&amp;feedTypeId=3,4,5&amp;sortBy=reqDate&amp;order=desc&amp;limit=5&amp;pgNum=1&amp;alertStatus=active" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="alertStatus" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alertStatus</stringProp>
                  <stringProp name="Argument.value">active</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586061899</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pgNum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pgNum</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sortBy</stringProp>
                  <stringProp name="Argument.value">reqDate</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="feedTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">feedTypeId</stringProp>
                  <stringProp name="Argument.value">3,4,5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="order" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order</stringProp>
                  <stringProp name="Argument.value">desc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/feeds/v1/notifications</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/img/arrow-down.svg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/img/arrow-down.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/img/logos/gsa-logo.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/img/logos/gsa-logo.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/fonts/font-awesome/fontawesome-webfont.woff2?v=4.7.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">4.7.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/fonts/font-awesome/fontawesome-webfont.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/fonts/sourcesanspro-bold-webfont.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/fonts/sourcesanspro-bold-webfont.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/fonts/sourcesanspro-light-webfont.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/fonts/sourcesanspro-light-webfont.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/img/sam-logo.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/img/sam-logo.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/img/correct8.svg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/img/correct8.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/fonts/font-awesome/fontawesome-webfont.woff2?v=4.7.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">4.7.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/fonts/font-awesome/fontawesome-webfont.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/fonts/sourcesanspro-bold-webfont.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/fonts/sourcesanspro-bold-webfont.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/fonts/sourcesanspro-light-webfont.woff2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/fonts/sourcesanspro-light-webfont.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bam.nr-data.net/events/1/NRJS-5e87c0af8c9a813f03b?a=270637501&amp;sa=1&amp;v=1153.61ee9ba&amp;t=Unnamed%20Transaction&amp;rst=9077&amp;ref=https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/workspace" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">bel.7;1,8,,6zv,4vk,6c,&apos;initialPageLoad,&apos;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/workspace,1,1,,,!!!!&apos;c762a2f0-2c69-4a10-91c8-e487ffe4bdee,&apos;1,lk,lk;2,,dh,k,1,3,&apos;POST,5k,&apos;www.google-analytics.com:443,&apos;/j/collect,,1,,&apos;2,!!!;2,,2ar,9w,6,a,&apos;GET,5k,&apos;100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443,&apos;/api/login/watchlistservice/v1/api/toggle/enablecontractdata,,5,,&apos;5,!!!;2,,2ax,a7,4,8,8,5k,9,&apos;/api/login/feeds/v1/requests,,9c,,&apos;6,!!!;2,,2b0,az,5,a,8,5k,9,&apos;/api/login/feeds/v1/notifications,,1ou,,&apos;7,!!!;2,,2ao,f3,4,6,8,5k,9,&apos;/api/login/cms/feature/v1/read/FBO,,5,,&apos;4,!!!;2,,29t,h4,4,6,8,5k,9,&apos;/api/login/iam/rms/v3/session,,c1,,&apos;3,!!!;2,,2b4,hd,3,5,8,5k,9,&apos;/api/login/feedback/v1/question,,jz,,&apos;8,!!!;2,1,3wr,8r,4,6,8,5k,9,&apos;/api/login/role/feature/v1/read/nonfed_role_mgmt_fe,,4,,&apos;9,!!!;2,1,45l,al,4,4,8,5k,9,i,,c1,,&apos;10,!!!;2,l,4g9,bl,3n,3p,8,5k,9,&apos;/api/login/rms/v1/userprofile/narayan.acharya@gsa.gov/,,ta,,&apos;11,!!!;2,,4sk,cz,6,d,8,5k,9,&apos;/api/login/federalorganizations/feature/v1/read/CREATEOFFICEENABLED,,4,,&apos;15,!!!;2,,4sv,d1,6,a,8,5k,9,&apos;/api/login/rms/v1/widget/,,dl,,&apos;17,!!!;2,,4s7,ef,6,c,8,5k,9,c,,9c,,&apos;12,!!!;2,,4sb,h8,8,e,8,5k,9,&apos;/api/login/alert/v2/alerts,,e4,,&apos;14,!!!;2,,4sm,mo,6,d,8,5k,9,m,,4,,&apos;16,!!!;2,,4s9,nd,7,d,8,5k,9,e,,1ou,,&apos;13,!!!;2,,4sy,qp,5,c,8,5k,9,&apos;/api/login/feeds/v1/feedCounts,,1,,&apos;18,!!!;2,,4tb,vx,5,b,8,5k,9,&apos;/api/login/federalorganizations/v2/FHWidget,,5x,,&apos;19,!!!;2,,4te,10f,5,a,8,5k,9,&apos;/api/login/federalorganizations/v1/organizations/type,,a,,&apos;20,!!!;2,,4tl,145,6,b,8,5k,9,&apos;/api/login/opps/v2/opportunities,,4j,,&apos;21,!!!;2,,4u1,18r,9,f,8,5k,9,&apos;/api/login/rms/v1/requestaccess/roles/,,82,,&apos;24,!!!;2,,4u7,196,5,a,8,5k,9,c,,9c,,&apos;27,!!!;2,,4ua,1e2,4,8,8,5k,9,e,,1ou,,&apos;30,!!!;2,,4tp,1j5,5,b,8,5k,9,&apos;/api/login/wdol/v1/cba,,39,,&apos;23,!!!;2,,4u5,1j1,5,b,8,5k,9,&apos;/api/login/federalorganizations/v1/organizations/100006688,,2r2,,&apos;25,!!!;2,,4u8,1nn,6,a,8,5k,9,c,,9c,,&apos;28,!!!;2,,4u9,1np,1,1,8,,9,c,,,,&apos;29,!!!;2,,4tn,1v5,8,e,8,5k,9,&apos;/api/login/opps/v2/facets,,5n,,&apos;22,!!!;2,,4u6,1v1,6,b,8,5k,9,1e,,2r2,,&apos;26,!!!;2,,4ub,1v9,5,b,8,5k,9,e,,1ou,,&apos;31,!!!;2,,4uc,253,g,l,8,5k,9,e,,1ou,,&apos;32,!!!;b,24,!,!-22,,,,!,9,1i,e,,53,258,1,1ka,,2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">events/1/NRJS-5e87c0af8c9a813f03b?a=270637501&amp;sa=1&amp;v=1153.61ee9ba&amp;t=Unnamed%20Transaction&amp;rst=9077&amp;ref=https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/workspace</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bam.nr-data.net/events/1/NRJS-5e87c0af8c9a813f03b?a=270637501&amp;sa=1&amp;v=1153.61ee9ba&amp;t=Unnamed%20Transaction&amp;rst=15148&amp;ref=https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/workspace" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">bel.6;e,&apos;fp,lk,;e,&apos;fcp,lk,</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">events/1/NRJS-5e87c0af8c9a813f03b?a=270637501&amp;sa=1&amp;v=1153.61ee9ba&amp;t=Unnamed%20Transaction&amp;rst=15148&amp;ref=https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/workspace</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bam.nr-data.net/resources/1/NRJS-5e87c0af8c9a813f03b?a=270637501&amp;sa=1&amp;v=1153.61ee9ba&amp;t=Unnamed%20Transaction&amp;rst=15233&amp;ref=https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/workspace&amp;st=1613586055642&amp;ptid=fc55e9f8-0001-bc1b-1939-0177b1395639" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:484,&quot;e&quot;:484,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: www.google-analytics.com:443/j/collect&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:485,&quot;e&quot;:485,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: www.google-analytics.com:443/j/collect&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:504,&quot;e&quot;:504,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: www.google-analytics.com:443/j/collect&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:504,&quot;e&quot;:504,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: www.google-analytics.com:443/j/collect&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:504,&quot;e&quot;:505,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: www.google-analytics.com:443/j/collect&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:505,&quot;e&quot;:505,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: www.google-analytics.com:443/j/collect&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:505,&quot;e&quot;:505,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: www.google-analytics.com:443/j/collect&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:505,&quot;e&quot;:505,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: www.google-analytics.com:443/j/collect&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:505,&quot;e&quot;:505,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: www.google-analytics.com:443/j/collect&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:505,&quot;e&quot;:505,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: www.google-analytics.com:443/j/collect&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:505,&quot;e&quot;:505,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: www.google-analytics.com:443/j/collect&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:505,&quot;e&quot;:505,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: www.google-analytics.com:443/j/collect&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:505,&quot;e&quot;:505,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: www.google-analytics.com:443/j/collect&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:505,&quot;e&quot;:506,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: www.google-analytics.com:443/j/collect&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2945,&quot;e&quot;:2945,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2976,&quot;e&quot;:2976,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/cms/feature/v1/read/FBO&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2978,&quot;e&quot;:2978,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/watchlistservice/v1/api/toggle/enablecontractdata&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2985,&quot;e&quot;:2985,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2988,&quot;e&quot;:2988,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2992,&quot;e&quot;:2992,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feedback/v1/question&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3331,&quot;e&quot;:3333,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/watchlistservice/v1/api/toggle/enablecontractdata&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3333,&quot;e&quot;:3333,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/watchlistservice/v1/api/toggle/enablecontractdata&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3333,&quot;e&quot;:3334,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/watchlistservice/v1/api/toggle/enablecontractdata&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3334,&quot;e&quot;:3334,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/watchlistservice/v1/api/toggle/enablecontractdata&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3335,&quot;e&quot;:3336,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/watchlistservice/v1/api/toggle/enablecontractdata&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3336,&quot;e&quot;:3336,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/watchlistservice/v1/api/toggle/enablecontractdata&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3348,&quot;e&quot;:3349,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3349,&quot;e&quot;:3349,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3349,&quot;e&quot;:3351,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3351,&quot;e&quot;:3351,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3352,&quot;e&quot;:3354,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3354,&quot;e&quot;:3354,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3377,&quot;e&quot;:3380,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3380,&quot;e&quot;:3380,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3381,&quot;e&quot;:3382,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3382,&quot;e&quot;:3382,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3383,&quot;e&quot;:3385,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3385,&quot;e&quot;:3385,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3517,&quot;e&quot;:3518,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/cms/feature/v1/read/FBO&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3518,&quot;e&quot;:3518,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/cms/feature/v1/read/FBO&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3518,&quot;e&quot;:3519,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/cms/feature/v1/read/FBO&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3519,&quot;e&quot;:3519,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/cms/feature/v1/read/FBO&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3519,&quot;e&quot;:3521,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/cms/feature/v1/read/FBO&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3521,&quot;e&quot;:3521,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/cms/feature/v1/read/FBO&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3557,&quot;e&quot;:3558,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3558,&quot;e&quot;:3558,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3558,&quot;e&quot;:3559,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3559,&quot;e&quot;:3559,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3561,&quot;e&quot;:3562,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3562,&quot;e&quot;:3562,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3615,&quot;e&quot;:3616,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feedback/v1/question&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3616,&quot;e&quot;:3616,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feedback/v1/question&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3616,&quot;e&quot;:3616,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feedback/v1/question&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3616,&quot;e&quot;:3616,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feedback/v1/question&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3617,&quot;e&quot;:3618,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feedback/v1/question&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3618,&quot;e&quot;:3618,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feedback/v1/question&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5066,&quot;e&quot;:5066,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5230,&quot;e&quot;:5230,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5309,&quot;e&quot;:5309,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5309,&quot;e&quot;:5309,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5309,&quot;e&quot;:5309,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5309,&quot;e&quot;:5309,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5309,&quot;e&quot;:5310,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5310,&quot;e&quot;:5310,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5379,&quot;e&quot;:5381,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5381,&quot;e&quot;:5381,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5381,&quot;e&quot;:5381,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5381,&quot;e&quot;:5382,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5382,&quot;e&quot;:5383,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5383,&quot;e&quot;:5383,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5385,&quot;e&quot;:5385,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5764,&quot;e&quot;:5764,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5764,&quot;e&quot;:5764,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5764,&quot;e&quot;:5765,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5765,&quot;e&quot;:5765,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5766,&quot;e&quot;:5766,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5766,&quot;e&quot;:5766,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5768,&quot;e&quot;:5768,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/userprofile/narayan.acharya@gsa.gov/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6184,&quot;e&quot;:6185,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/userprofile/narayan.acharya@gsa.gov/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6185,&quot;e&quot;:6185,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/userprofile/narayan.acharya@gsa.gov/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6185,&quot;e&quot;:6185,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/userprofile/narayan.acharya@gsa.gov/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6185,&quot;e&quot;:6185,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/userprofile/narayan.acharya@gsa.gov/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6186,&quot;e&quot;:6187,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/userprofile/narayan.acharya@gsa.gov/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6187,&quot;e&quot;:6187,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/userprofile/narayan.acharya@gsa.gov/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6198,&quot;e&quot;:6198,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6200,&quot;e&quot;:6200,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6203,&quot;e&quot;:6203,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/alert/v2/alerts&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6212,&quot;e&quot;:6212,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/feature/v1/read/CREATEOFFICEENABLED&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6214,&quot;e&quot;:6214,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6223,&quot;e&quot;:6223,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/widget/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6226,&quot;e&quot;:6226,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/feedCounts&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6239,&quot;e&quot;:6239,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v2/FHWidget&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6242,&quot;e&quot;:6242,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/type&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6249,&quot;e&quot;:6249,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/opportunities&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6250,&quot;e&quot;:6250,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/facets&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6253,&quot;e&quot;:6253,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/wdol/v1/cba&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6264,&quot;e&quot;:6265,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/requestaccess/roles/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6269,&quot;e&quot;:6269,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6270,&quot;e&quot;:6270,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6271,&quot;e&quot;:6271,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6272,&quot;e&quot;:6272,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6273,&quot;e&quot;:6273,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6274,&quot;e&quot;:6274,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6275,&quot;e&quot;:6275,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6276,&quot;e&quot;:6276,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6672,&quot;e&quot;:6675,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/feature/v1/read/CREATEOFFICEENABLED&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6675,&quot;e&quot;:6675,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/feature/v1/read/CREATEOFFICEENABLED&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6675,&quot;e&quot;:6678,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/feature/v1/read/CREATEOFFICEENABLED&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6678,&quot;e&quot;:6678,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/feature/v1/read/CREATEOFFICEENABLED&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6679,&quot;e&quot;:6681,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/feature/v1/read/CREATEOFFICEENABLED&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6681,&quot;e&quot;:6681,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/feature/v1/read/CREATEOFFICEENABLED&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6686,&quot;e&quot;:6688,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/widget/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6688,&quot;e&quot;:6688,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/widget/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6688,&quot;e&quot;:6690,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/widget/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6691,&quot;e&quot;:6691,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/widget/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6692,&quot;e&quot;:6694,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/widget/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6694,&quot;e&quot;:6694,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/widget/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6712,&quot;e&quot;:6715,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6715,&quot;e&quot;:6715,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6715,&quot;e&quot;:6717,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6717,&quot;e&quot;:6717,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6718,&quot;e&quot;:6721,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6721,&quot;e&quot;:6721,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6817,&quot;e&quot;:6820,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/alert/v2/alerts&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6820,&quot;e&quot;:6820,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/alert/v2/alerts&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6820,&quot;e&quot;:6822,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/alert/v2/alerts&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6822,&quot;e&quot;:6822,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/alert/v2/alerts&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6823,&quot;e&quot;:6826,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/alert/v2/alerts&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:6826,&quot;e&quot;:6826,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/alert/v2/alerts&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7023,&quot;e&quot;:7026,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7026,&quot;e&quot;:7026,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7026,&quot;e&quot;:7029,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7029,&quot;e&quot;:7029,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7030,&quot;e&quot;:7032,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7032,&quot;e&quot;:7032,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7036,&quot;e&quot;:7039,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7039,&quot;e&quot;:7039,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7039,&quot;e&quot;:7041,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7041,&quot;e&quot;:7041,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7042,&quot;e&quot;:7045,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7045,&quot;e&quot;:7045,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7180,&quot;e&quot;:7183,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/feedCounts&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7183,&quot;e&quot;:7183,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/feedCounts&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7183,&quot;e&quot;:7186,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/feedCounts&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7186,&quot;e&quot;:7186,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/feedCounts&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7187,&quot;e&quot;:7189,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/feedCounts&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7189,&quot;e&quot;:7189,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/feedCounts&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7382,&quot;e&quot;:7385,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v2/FHWidget&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7385,&quot;e&quot;:7385,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v2/FHWidget&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7385,&quot;e&quot;:7387,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v2/FHWidget&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7387,&quot;e&quot;:7387,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v2/FHWidget&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7388,&quot;e&quot;:7390,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v2/FHWidget&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7390,&quot;e&quot;:7390,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v2/FHWidget&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7547,&quot;e&quot;:7550,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/type&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7550,&quot;e&quot;:7550,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/type&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7550,&quot;e&quot;:7552,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/type&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7552,&quot;e&quot;:7552,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/type&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7553,&quot;e&quot;:7555,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/type&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7555,&quot;e&quot;:7555,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/type&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7689,&quot;e&quot;:7691,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/opportunities&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7691,&quot;e&quot;:7691,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/opportunities&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7691,&quot;e&quot;:7693,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/opportunities&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7693,&quot;e&quot;:7693,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/opportunities&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7694,&quot;e&quot;:7696,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/opportunities&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7696,&quot;e&quot;:7696,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/opportunities&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7871,&quot;e&quot;:7873,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/requestaccess/roles/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7873,&quot;e&quot;:7873,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/requestaccess/roles/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7873,&quot;e&quot;:7875,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/requestaccess/roles/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7875,&quot;e&quot;:7875,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/requestaccess/roles/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7876,&quot;e&quot;:7878,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/requestaccess/roles/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7878,&quot;e&quot;:7878,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/requestaccess/roles/&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7892,&quot;e&quot;:7894,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7894,&quot;e&quot;:7894,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7894,&quot;e&quot;:7896,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7896,&quot;e&quot;:7896,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7897,&quot;e&quot;:7899,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7899,&quot;e&quot;:7899,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8070,&quot;e&quot;:8072,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8073,&quot;e&quot;:8073,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8073,&quot;e&quot;:8075,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8075,&quot;e&quot;:8075,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8076,&quot;e&quot;:8078,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8078,&quot;e&quot;:8078,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8232,&quot;e&quot;:8235,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/wdol/v1/cba&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8235,&quot;e&quot;:8235,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/wdol/v1/cba&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8235,&quot;e&quot;:8237,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/wdol/v1/cba&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8237,&quot;e&quot;:8237,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/wdol/v1/cba&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8238,&quot;e&quot;:8240,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/wdol/v1/cba&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8240,&quot;e&quot;:8240,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/wdol/v1/cba&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8244,&quot;e&quot;:8246,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8246,&quot;e&quot;:8246,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8246,&quot;e&quot;:8248,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8248,&quot;e&quot;:8248,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8249,&quot;e&quot;:8252,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8252,&quot;e&quot;:8252,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8414,&quot;e&quot;:8416,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8416,&quot;e&quot;:8416,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8416,&quot;e&quot;:8418,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8418,&quot;e&quot;:8418,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8419,&quot;e&quot;:8421,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8421,&quot;e&quot;:8421,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8422,&quot;e&quot;:8422,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8423,&quot;e&quot;:8423,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8662,&quot;e&quot;:8665,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/facets&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8665,&quot;e&quot;:8665,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/facets&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8665,&quot;e&quot;:8667,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/facets&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8667,&quot;e&quot;:8667,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/facets&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8668,&quot;e&quot;:8671,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/facets&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8671,&quot;e&quot;:8671,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/facets&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8677,&quot;e&quot;:8679,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8680,&quot;e&quot;:8680,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8680,&quot;e&quot;:8682,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8682,&quot;e&quot;:8682,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8683,&quot;e&quot;:8685,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8685,&quot;e&quot;:8685,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8690,&quot;e&quot;:8693,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8693,&quot;e&quot;:8693,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8693,&quot;e&quot;:8695,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8695,&quot;e&quot;:8695,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8696,&quot;e&quot;:8698,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8698,&quot;e&quot;:8698,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:9044,&quot;e&quot;:9046,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:9047,&quot;e&quot;:9047,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:9047,&quot;e&quot;:9049,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:9049,&quot;e&quot;:9049,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:9051,&quot;e&quot;:9053,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:9053,&quot;e&quot;:9053,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:9077,&quot;e&quot;:9077,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:9394,&quot;e&quot;:9394,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:9394,&quot;e&quot;:9394,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:9394,&quot;e&quot;:9394,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:9394,&quot;e&quot;:9394,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:9394,&quot;e&quot;:9394,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:9394,&quot;e&quot;:9394,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:15148,&quot;e&quot;:15148,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:15223,&quot;e&quot;:15223,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:15223,&quot;e&quot;:15223,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:15223,&quot;e&quot;:15224,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:15224,&quot;e&quot;:15224,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:15225,&quot;e&quot;:15225,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:15225,&quot;e&quot;:15225,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:505,&quot;e&quot;:505,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: www.google-analytics.com:443/j/collect&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:3334,&quot;e&quot;:3335,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/watchlistservice/v1/api/toggle/enablecontractdata&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:3351,&quot;e&quot;:3352,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:3382,&quot;e&quot;:3383,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:3519,&quot;e&quot;:3519,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/cms/feature/v1/read/FBO&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:3559,&quot;e&quot;:3559,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:3616,&quot;e&quot;:3617,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feedback/v1/question&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:5309,&quot;e&quot;:5309,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:5382,&quot;e&quot;:5382,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:5765,&quot;e&quot;:5765,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:6185,&quot;e&quot;:6186,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/userprofile/narayan.acharya@gsa.gov/&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:6678,&quot;e&quot;:6679,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/feature/v1/read/CREATEOFFICEENABLED&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:6691,&quot;e&quot;:6691,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/widget/&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:6717,&quot;e&quot;:6718,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:6822,&quot;e&quot;:6823,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/alert/v2/alerts&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:7029,&quot;e&quot;:7030,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:7041,&quot;e&quot;:7042,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:7186,&quot;e&quot;:7187,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/feedCounts&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:7387,&quot;e&quot;:7388,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v2/FHWidget&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:7552,&quot;e&quot;:7552,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/type&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:7693,&quot;e&quot;:7694,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/opportunities&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:7875,&quot;e&quot;:7876,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/requestaccess/roles/&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:7896,&quot;e&quot;:7897,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:8075,&quot;e&quot;:8075,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:8237,&quot;e&quot;:8238,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/wdol/v1/cba&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:8248,&quot;e&quot;:8249,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:8418,&quot;e&quot;:8419,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:8667,&quot;e&quot;:8668,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/facets&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:8682,&quot;e&quot;:8683,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:8695,&quot;e&quot;:8696,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:9049,&quot;e&quot;:9050,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:9394,&quot;e&quot;:9394,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:15224,&quot;e&quot;:15225,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:506,&quot;e&quot;:506,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: www.google-analytics.com:443/j/collect&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:506,&quot;e&quot;:506,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: www.google-analytics.com:443/j/collect&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3336,&quot;e&quot;:3341,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/watchlistservice/v1/api/toggle/enablecontractdata&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3354,&quot;e&quot;:3356,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3385,&quot;e&quot;:3388,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3487,&quot;e&quot;:3488,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3508,&quot;e&quot;:3508,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3521,&quot;e&quot;:3523,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/cms/feature/v1/read/FBO&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3562,&quot;e&quot;:3565,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3618,&quot;e&quot;:3620,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feedback/v1/question&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3624,&quot;e&quot;:3624,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3652,&quot;e&quot;:3652,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3762,&quot;e&quot;:3762,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3787,&quot;e&quot;:3787,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3808,&quot;e&quot;:3808,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3892,&quot;e&quot;:3893,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3911,&quot;e&quot;:3911,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:4086,&quot;e&quot;:4086,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:4107,&quot;e&quot;:4107,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:4165,&quot;e&quot;:4166,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:4185,&quot;e&quot;:4186,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:4262,&quot;e&quot;:4262,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:4428,&quot;e&quot;:4429,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:4611,&quot;e&quot;:4612,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:4701,&quot;e&quot;:4702,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:4718,&quot;e&quot;:4718,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:4746,&quot;e&quot;:4746,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:5068,&quot;e&quot;:5068,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:5070,&quot;e&quot;:5070,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:5310,&quot;e&quot;:5310,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:5383,&quot;e&quot;:5386,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:5766,&quot;e&quot;:5770,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:6187,&quot;e&quot;:6317,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/userprofile/narayan.acharya@gsa.gov/&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:6681,&quot;e&quot;:6685,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/feature/v1/read/CREATEOFFICEENABLED&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:6694,&quot;e&quot;:6698,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/widget/&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:6721,&quot;e&quot;:6724,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:6826,&quot;e&quot;:6831,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/alert/v2/alerts&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7032,&quot;e&quot;:7036,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7045,&quot;e&quot;:7049,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7189,&quot;e&quot;:7192,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/feedCounts&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7390,&quot;e&quot;:7393,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v2/FHWidget&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7555,&quot;e&quot;:7558,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/type&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7696,&quot;e&quot;:7700,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/opportunities&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7878,&quot;e&quot;:7885,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/requestaccess/roles/&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7899,&quot;e&quot;:7902,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8078,&quot;e&quot;:8080,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8240,&quot;e&quot;:8243,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/wdol/v1/cba&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8252,&quot;e&quot;:8255,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8421,&quot;e&quot;:8425,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8671,&quot;e&quot;:8676,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/facets&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8685,&quot;e&quot;:8689,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8698,&quot;e&quot;:8701,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:9053,&quot;e&quot;:9067,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:9394,&quot;e&quot;:9395,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:15225,&quot;e&quot;:15226,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:508,&quot;e&quot;:508,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:508,&quot;e&quot;:508,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3342,&quot;e&quot;:3342,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3342,&quot;e&quot;:3342,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3356,&quot;e&quot;:3356,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3356,&quot;e&quot;:3356,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3389,&quot;e&quot;:3389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3389,&quot;e&quot;:3389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3525,&quot;e&quot;:3525,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3525,&quot;e&quot;:3525,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3565,&quot;e&quot;:3565,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3565,&quot;e&quot;:3565,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3622,&quot;e&quot;:3622,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3622,&quot;e&quot;:3622,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:4432,&quot;e&quot;:4432,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:4432,&quot;e&quot;:4434,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:4434,&quot;e&quot;:4434,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5310,&quot;e&quot;:5310,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5310,&quot;e&quot;:5310,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5387,&quot;e&quot;:5387,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5387,&quot;e&quot;:5387,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5770,&quot;e&quot;:5770,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5770,&quot;e&quot;:5770,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:6327,&quot;e&quot;:6327,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:6327,&quot;e&quot;:6327,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:6685,&quot;e&quot;:6685,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:6686,&quot;e&quot;:6686,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:6701,&quot;e&quot;:6701,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:6701,&quot;e&quot;:6701,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:6724,&quot;e&quot;:6724,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:6725,&quot;e&quot;:6725,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:6832,&quot;e&quot;:6832,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:6832,&quot;e&quot;:6832,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7049,&quot;e&quot;:7049,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7049,&quot;e&quot;:7049,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7051,&quot;e&quot;:7051,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7051,&quot;e&quot;:7051,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7197,&quot;e&quot;:7197,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7197,&quot;e&quot;:7197,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7393,&quot;e&quot;:7394,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7394,&quot;e&quot;:7394,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7568,&quot;e&quot;:7568,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7568,&quot;e&quot;:7568,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7701,&quot;e&quot;:7701,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7701,&quot;e&quot;:7701,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7903,&quot;e&quot;:7903,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7903,&quot;e&quot;:7903,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7905,&quot;e&quot;:7905,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7905,&quot;e&quot;:7905,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8081,&quot;e&quot;:8081,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8081,&quot;e&quot;:8081,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8258,&quot;e&quot;:8258,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8258,&quot;e&quot;:8258,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8258,&quot;e&quot;:8258,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8258,&quot;e&quot;:8259,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8428,&quot;e&quot;:8428,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8428,&quot;e&quot;:8428,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8429,&quot;e&quot;:8429,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8429,&quot;e&quot;:8429,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8702,&quot;e&quot;:8702,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8703,&quot;e&quot;:8703,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8704,&quot;e&quot;:8704,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8704,&quot;e&quot;:8704,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8705,&quot;e&quot;:8705,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8705,&quot;e&quot;:8705,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9073,&quot;e&quot;:9073,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9073,&quot;e&quot;:9073,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9395,&quot;e&quot;:9395,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9395,&quot;e&quot;:9395,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9435,&quot;e&quot;:9435,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9435,&quot;e&quot;:9436,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9439,&quot;e&quot;:9439,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:15226,&quot;e&quot;:15226,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:15226,&quot;e&quot;:15226,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;finish&quot;,&quot;s&quot;:3085,&quot;e&quot;:3085,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;finish&quot;,&quot;s&quot;:6321,&quot;e&quot;:6321,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;finish&quot;,&quot;s&quot;:6384,&quot;e&quot;:6384,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;finish&quot;,&quot;s&quot;:6384,&quot;e&quot;:6385,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:485,&quot;e&quot;:506,&quot;o&quot;:&quot;200 POST: www.google-analytics.com:443/j/collect&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:2979,&quot;e&quot;:3341,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/watchlistservice/v1/api/toggle/enablecontractdata&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:2985,&quot;e&quot;:3356,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:2988,&quot;e&quot;:3388,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:2976,&quot;e&quot;:3523,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/cms/feature/v1/read/FBO&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:2945,&quot;e&quot;:3565,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:2992,&quot;e&quot;:3620,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feedback/v1/question&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:5230,&quot;e&quot;:5310,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:5067,&quot;e&quot;:5386,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:5385,&quot;e&quot;:5770,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:5769,&quot;e&quot;:6317,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/userprofile/narayan.acharya@gsa.gov/&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6212,&quot;e&quot;:6685,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/feature/v1/read/CREATEOFFICEENABLED&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6223,&quot;e&quot;:6698,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/widget/&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6199,&quot;e&quot;:6724,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6203,&quot;e&quot;:6831,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/alert/v2/alerts&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6214,&quot;e&quot;:7036,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6201,&quot;e&quot;:7049,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6226,&quot;e&quot;:7192,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/feedCounts&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6239,&quot;e&quot;:7393,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v2/FHWidget&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6242,&quot;e&quot;:7558,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/type&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6249,&quot;e&quot;:7700,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/opportunities&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6265,&quot;e&quot;:7885,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/requestaccess/roles/&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6271,&quot;e&quot;:7902,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6274,&quot;e&quot;:8080,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6253,&quot;e&quot;:8243,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/wdol/v1/cba&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6269,&quot;e&quot;:8255,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6272,&quot;e&quot;:8425,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6250,&quot;e&quot;:8676,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/facets&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6270,&quot;e&quot;:8689,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6275,&quot;e&quot;:8701,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:6276,&quot;e&quot;:9067,&quot;o&quot;:&quot;200 GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:9077,&quot;e&quot;:9395,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:15149,&quot;e&quot;:15226,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:5980,&quot;e&quot;:5981,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:15147,&quot;e&quot;:15149,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:6917,&quot;e&quot;:6918,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.sam-banner__header-inner&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:6935,&quot;e&quot;:6936,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;p.sam-banner__header-text&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:6957,&quot;e&quot;:7006,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;a#element-focus.item.ng-tns-c237-0.ng-star-inserted&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:7019,&quot;e&quot;:7102,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;h3.sam.heading&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:7119,&quot;e&quot;:7120,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.widget-space&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:7135,&quot;e&quot;:7135,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.sam-card__header&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:7151,&quot;e&quot;:7468,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.sam.statistics&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:7485,&quot;e&quot;:7485,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.sam-card.m_T-2x&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:7502,&quot;e&quot;:7502,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.usa-width-two-thirds.tablet:padding-right-5.tablet:bg-transparent-to-base-lightest&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:7519,&quot;e&quot;:7535,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;i.fa.fa-user.fa-fw.fa-3x.text-gray-30&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:7566,&quot;e&quot;:7651,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:7668,&quot;e&quot;:7802,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.display-flex.flex-align-start.flex-wrap&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:7719,&quot;e&quot;:7784,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.display-none.tablet:display-block.m_B-6x&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:7819,&quot;e&quot;:7819,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div#iframe-wrapper-5c32565c-a0ba-42be-8060-34d2cf2285fa&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:7834,&quot;e&quot;:7834,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;iframe#iframe-popup-ui-5c32565c-a0ba-42be-8060-34d2cf2285fa&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:7436,&quot;e&quot;:7436,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:7937,&quot;e&quot;:7937,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;abort&quot;,&quot;s&quot;:8423,&quot;e&quot;:8423,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined GET: 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:5146,&quot;e&quot;:5226,&quot;o&quot;:&quot;https://bam.nr-data.net:443/1/NRJS-5e87c0af8c9a813f03b&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:5230,&quot;e&quot;:5308,&quot;o&quot;:&quot;https://bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:5385,&quot;e&quot;:5763,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/iam/rms/v3/session&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:5768,&quot;e&quot;:6182,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/userprofile/narayan.acharya@gsa.gov/&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6198,&quot;e&quot;:6711,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6200,&quot;e&quot;:7021,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6203,&quot;e&quot;:6815,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/alert/v2/alerts&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6212,&quot;e&quot;:6671,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/feature/v1/read/CREATEOFFICEENABLED&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6214,&quot;e&quot;:7020,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/role/feature/v1/read/nonfed_role_mgmt_fe&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6223,&quot;e&quot;:6681,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/widget/&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6226,&quot;e&quot;:7179,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/feedCounts&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6239,&quot;e&quot;:7381,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v2/FHWidget&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6242,&quot;e&quot;:7546,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/type&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6249,&quot;e&quot;:7687,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/opportunities&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6250,&quot;e&quot;:8661,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/opps/v2/facets&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6253,&quot;e&quot;:8231,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/wdol/v1/cba&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6264,&quot;e&quot;:7869,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/rms/v1/requestaccess/roles/&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6269,&quot;e&quot;:8231,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6270,&quot;e&quot;:8664,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/federalorganizations/v1/organizations/100006688&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6271,&quot;e&quot;:7870,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6271,&quot;e&quot;:8412,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6273,&quot;e&quot;:8428,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/requests&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6274,&quot;e&quot;:8071,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6274,&quot;e&quot;:8664,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:6276,&quot;e&quot;:9044,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/api/login/feeds/v1/notifications&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:9077,&quot;e&quot;:9392,&quot;o&quot;:&quot;https://bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:15148,&quot;e&quot;:15222,&quot;o&quot;:&quot;https://bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:6295,&quot;e&quot;:8049,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/assets/img/arrow-down.svg&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:6299,&quot;e&quot;:8666,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/assets/img/logos/gsa-logo.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:6302,&quot;e&quot;:7546,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/assets/fonts/font-awesome/fontawesome-webfont.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:6302,&quot;e&quot;:6997,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/assets/fonts/sourcesanspro-bold-webfont.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:6302,&quot;e&quot;:7176,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/assets/fonts/sourcesanspro-light-webfont.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:6321,&quot;e&quot;:8603,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/assets/img/correct8.svg&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:6318,&quot;e&quot;:8230,&quot;o&quot;:&quot;https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov:443/assets/img/sam-logo.png&quot;,&quot;t&quot;:&quot;resource&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">resources/1/NRJS-5e87c0af8c9a813f03b?a=270637501&amp;sa=1&amp;v=1153.61ee9ba&amp;t=Unnamed%20Transaction&amp;rst=15233&amp;ref=https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/workspace&amp;st=1613586055642&amp;ptid=fc55e9f8-0001-bc1b-1939-0177b1395639</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/29-es2015.53dba6f97a507a5e44f0.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">29-es2015.53dba6f97a507a5e44f0.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bam.nr-data.net/resources/1/NRJS-5e87c0af8c9a813f03b?a=270637501&amp;sa=1&amp;v=1153.61ee9ba&amp;t=Unnamed%20Transaction&amp;rst=25241&amp;ref=https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/workspace&amp;st=1613586055642&amp;ptid=fc55e9f8-0001-bc1b-1939-0177b1395639" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:15237,&quot;e&quot;:15237,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:15391,&quot;e&quot;:15392,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:15392,&quot;e&quot;:15392,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:15392,&quot;e&quot;:15392,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:15392,&quot;e&quot;:15392,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:15231,&quot;e&quot;:15238,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:25184,&quot;e&quot;:25186,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:15238,&quot;e&quot;:15392,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:15392,&quot;e&quot;:15392,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:15392,&quot;e&quot;:15392,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:15392,&quot;e&quot;:15392,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:19021,&quot;e&quot;:19022,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div#transaction-popup-ui-5c32565c-a0ba-42be-8060-34d2cf2285fa.ui-draggable.ui-draggable-handle&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:19035,&quot;e&quot;:19035,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;h3.sam.heading&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:19055,&quot;e&quot;:19055,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;button#headerIconNotifications.item.notification-container.ng-tns-c237-0&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:19069,&quot;e&quot;:19202,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;button#headerIconRequests.item.notification-container.ng-tns-c237-0.ng-star-inserted&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:19121,&quot;e&quot;:19951,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;path.&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:24819,&quot;e&quot;:24853,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;path.&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:19219,&quot;e&quot;:19818,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;button#headerIconSearch.item.ng-tns-c237-0&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:19835,&quot;e&quot;:20155,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;button#headerIconMenu.item.ng-tns-c237-0&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:23318,&quot;e&quot;:23568,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;button#headerIconMenu.item.ng-tns-c237-0&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:19969,&quot;e&quot;:19969,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;svg.svg-inline--fa.fa-bars.fa-w-14&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:24486,&quot;e&quot;:24486,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;svg.svg-inline--fa.fa-bars.fa-w-14&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:24444,&quot;e&quot;:24519,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;button#headerIconMenu.item.ng-tns-c237-0.active&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:24538,&quot;e&quot;:24800,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;a#header-link-databank.item.ng-tns-c237-0&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:24836,&quot;e&quot;:24963,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;svg.svg-inline--fa.fa-chart-area.fa-w-16&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:19522,&quot;e&quot;:19522,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:24078,&quot;e&quot;:24078,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:24988,&quot;e&quot;:24988,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:23765,&quot;e&quot;:23798,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;button#headerIconMenu.item.ng-tns-c237-0.active&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:23800,&quot;e&quot;:23800,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;button#headerIconMenu.item.ng-tns-c237-0.active&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:23800,&quot;e&quot;:23805,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;button#headerIconMenu.item.ng-tns-c237-0.active&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:25158,&quot;e&quot;:25176,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;svg.svg-inline--fa.fa-chart-area.fa-w-16&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:25176,&quot;e&quot;:25176,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;svg.svg-inline--fa.fa-chart-area.fa-w-16&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:25176,&quot;e&quot;:25178,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;svg.svg-inline--fa.fa-chart-area.fa-w-16&quot;},{&quot;n&quot;:&quot;finish&quot;,&quot;s&quot;:24018,&quot;e&quot;:24019,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;finish&quot;,&quot;s&quot;:24019,&quot;e&quot;:24019,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;finish&quot;,&quot;s&quot;:25182,&quot;e&quot;:25182,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:15148,&quot;e&quot;:15222,&quot;o&quot;:&quot;https://bam.nr-data.net:443/events/1/NRJS-5e87c0af8c9a813f03b&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:15238,&quot;e&quot;:15390,&quot;o&quot;:&quot;https://bam.nr-data.net:443/resources/1/NRJS-5e87c0af8c9a813f03b&quot;,&quot;t&quot;:&quot;resource&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">resources/1/NRJS-5e87c0af8c9a813f03b?a=270637501&amp;sa=1&amp;v=1153.61ee9ba&amp;t=Unnamed%20Transaction&amp;rst=25241&amp;ref=https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/workspace&amp;st=1613586055642&amp;ptid=fc55e9f8-0001-bc1b-1939-0177b1395639</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/iam/rms/v3/session?api_key=null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api_key</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/iam/rms/v3/session</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.google-analytics.com/collect" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="de" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">de</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="jid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">jid</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl</stringProp>
                  <stringProp name="Argument.value">https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/workspace</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dp</stringProp>
                  <stringProp name="Argument.value">/reports/awards/standard</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dr</stringProp>
                  <stringProp name="Argument.value">https://idp.int.identitysandbox.gov/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="gjid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">gjid</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">UA-33523145-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dt</stringProp>
                  <stringProp name="Argument.value">/workspace</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sd</stringProp>
                  <stringProp name="Argument.value">30-bit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value">en-us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1680x1050</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">91106540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_gid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_gid</stringProp>
                  <stringProp name="Argument.value">375145963.1613418207</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cd2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cd2</stringProp>
                  <stringProp name="Argument.value">GSA - 100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cd1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cd1</stringProp>
                  <stringProp name="Argument.value">GSA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cd4" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cd4</stringProp>
                  <stringProp name="Argument.value">unspecified:100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cd3" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cd3</stringProp>
                  <stringProp name="Argument.value">20181010 v4.1 - Universal Analytics</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">pageview</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_s</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cd6" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cd6</stringProp>
                  <stringProp name="Argument.value">https://dap.digitalgov.gov/Universal-Federated-Analytics-Min.js</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cd5" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cd5</stringProp>
                  <stringProp name="Argument.value">unspecified:100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_u" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_u</stringProp>
                  <stringProp name="Argument.value">SAGAAQABAAAAAC~</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_v</stringProp>
                  <stringProp name="Argument.value">j88</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cd7" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cd7</stringProp>
                  <stringProp name="Argument.value">https:</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">vp</stringProp>
                  <stringProp name="Argument.value">1680x863</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="z" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">z</stringProp>
                  <stringProp name="Argument.value">1816622089</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="je" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">je</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">1506870167.1610999633</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">collect</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/databank/v1/reports/config/reportConfig?random=1613586081262" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586081262</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/databank/v1/reports/config/reportConfig</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/preferences/v1/favorites?random=1613586081265&amp;page=&amp;size=100&amp;sortBy=&amp;type=favorites" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586081265</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                  <stringProp name="Argument.value">100</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sortBy</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">favorites</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/preferences/v1/favorites</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/databank/v1/reports/static?random=1613586081266" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586081266</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/databank/v1/reports/static</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/feeds/v1/requests?random=1613586081280&amp;feedTypeId=2&amp;sortBy=reqDate&amp;order=desc&amp;limit=5&amp;pgNum=1&amp;skip=true&amp;enableCountForShowingAllRequests=1&amp;statIds=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586081280</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pgNum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pgNum</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="enableCountForShowingAllRequests" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">enableCountForShowingAllRequests</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sortBy</stringProp>
                  <stringProp name="Argument.value">reqDate</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="skip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">skip</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="feedTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">feedTypeId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="order" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order</stringProp>
                  <stringProp name="Argument.value">desc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="statIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">statIds</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/feeds/v1/requests</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/feeds/v1/notifications?random=1613586081282&amp;feedTypeId=3,4,5&amp;sortBy=reqDate&amp;order=desc&amp;limit=5&amp;pgNum=1&amp;alertStatus=active" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="alertStatus" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alertStatus</stringProp>
                  <stringProp name="Argument.value">active</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586081282</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pgNum" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pgNum</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sortBy</stringProp>
                  <stringProp name="Argument.value">reqDate</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="feedTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">feedTypeId</stringProp>
                  <stringProp name="Argument.value">3,4,5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="order" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order</stringProp>
                  <stringProp name="Argument.value">desc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/feeds/v1/notifications</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/api/login/cms/feature/v1/read/SHOW-FEEDBACK-SAM?random=1613586081290" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="random" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">random</stringProp>
                  <stringProp name="Argument.value">1613586081290</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/login/cms/feature/v1/read/SHOW-FEEDBACK-SAM</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Auth-Token" elementType="Header">
                  <stringProp name="Header.name">X-Auth-Token</stringProp>
                  <stringProp name="Header.value">4334803f-96c6-4697-985d-d77166bcea98</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov/assets/img/plus.svg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/img/plus.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
