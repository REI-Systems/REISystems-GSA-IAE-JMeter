<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Beta SAM Release 20.02 Load Test" enabled="true">
      <stringProp name="TestPlan.comments">JMeter tips &amp; techniques used in this test plan.

**************** (Run against Login with 20.2 Code) ****************

* All samplers are in test fragments to be re-usable. Test fragments describe what variables should be set (passed in) from their caller. 
* CSV data files are used in thread groups to get data that should be passed to the fragments (search terms, object IDs)
* Some test fragments call other fragments (some searches trigger a featured search for example)
* User defined variables and request defaults are heavily used to make the test easily repointable at other environment/url schemes. 
* Throughput controllers are used to distribute percentages of users in a thread group to different tests.
* Constant throughput timers are used to achieve target workloads, and the test has been calibrated from 1-5x workloads. Details on constant throughput timer settings are embedded in the threadgroup comments.
* Many fragments use JSON Extractor and Regex Extractor post processers to parse values from API responses to use in future API calls. 
* The Dummy Sampler, a JMeter plugin, is used to test these extractors. 
* Double check the connect and response timeouts in HTTP Request Defaults (they&apos;re set very low to calibrate the test)</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="SAM Global Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="API_URL" elementType="Argument">
            <stringProp name="Argument.name">API_URL</stringProp>
            <stringProp name="Argument.value">api-umbrella-lb-nonprod.prod-iae.bsp.gsa.gov</stringProp>
            <stringProp name="Argument.desc">API Umbrella URL including environment path</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_KEY" elementType="Argument">
            <stringProp name="Argument.name">API_KEY</stringProp>
            <stringProp name="Argument.value">5QYnc07txGAFnZR66ltU4F0uJhOiyW9uY6yZi5Ui</stringProp>
            <stringProp name="Argument.desc">API Key used to access API Umbrella</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FRONTEND_URL" elementType="Argument">
            <stringProp name="Argument.name">FRONTEND_URL</stringProp>
            <stringProp name="Argument.value">100samfrontendaltlogin.apps.prod-iae.bsp.gsa.gov</stringProp>
            <stringProp name="Argument.desc">SAM Front End URL</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_PATH" elementType="Argument">
            <stringProp name="Argument.name">API_PATH</stringProp>
            <stringProp name="Argument.value">/login</stringProp>
            <stringProp name="Argument.desc">API Path for environment &quot;/login&quot; refers to Charlie Environment</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SPRINT" elementType="Argument">
            <stringProp name="Argument.name">SPRINT</stringProp>
            <stringProp name="Argument.value">PI20-02</stringProp>
            <stringProp name="Argument.desc">Sprint release code that we&apos;re running load test against</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TG_RAMP_TIME" elementType="Argument">
            <stringProp name="Argument.name">TG_RAMP_TIME</stringProp>
            <stringProp name="Argument.value">500</stringProp>
            <stringProp name="Argument.desc">Thread group ramp up time</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults (API Umbrella)" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${API_URL}</stringProp>
        <stringProp name="HTTPSampler.port">443</stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate, br</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Connection</stringProp>
            <stringProp name="Header.value">keep-alive</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">JMeter</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">X-Api-Key</stringProp>
            <stringProp name="Header.value">${API_KEY}</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">false</boolProp>
        <boolProp name="useExpires">true</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="LoginGov Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">300</stringProp>
        <longProp name="ThreadGroup.start_time">1549661311000</longProp>
        <longProp name="ThreadGroup.end_time">1549661311000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">3600</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
          <intProp name="calcMode">2</intProp>
          <doubleProp>
            <name>throughput</name>
            <value>400.0</value>
            <savedValue>0.0</savedValue>
          </doubleProp>
          <stringProp name="TestPlan.comments">Workload	0.1	0.25	0.5	0.75	1	1.25	1.5	1.75	2
Per second	10	6	12	18	100	30	36	42	200
Per minute 	600	360	720	1080	6000	1800	2160	2520	12000
1/15th		24	48	72	400	120	144	168	800</stringProp>
        </ConstantThroughputTimer>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-Auth-Token</stringProp>
              <stringProp name="Header.value">a703952b-a016-4f8b-a905-21f4914a340c</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-Api-Key</stringProp>
              <stringProp name="Header.value">5QYnc07txGAFnZR66ltU4F0uJhOiyW9uY6yZi5Ui</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">iPlanetDirectoryPro</stringProp>
              <stringProp name="Header.value">a703952b-a016-4f8b-a905-21f4914a340c</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Include Controller" enabled="true">
          <stringProp name="IncludeController.includepath">logingov-fragment.jmx</stringProp>
        </IncludeController>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">jmeter-aggregate-report.txt</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Simple Data Writer" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">jmeter-simple-data-writer.txt</stringProp>
      </ResultCollector>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="agency_coord_login_token" elementType="Argument">
            <stringProp name="Argument.name">agency_coord_login_token</stringProp>
            <stringProp name="Argument.value">AQIC5wM2LY4SfcwloQ4x35KE0QCN_lgDgPX-S_31qCwUpFk.*AAJTSQACMDUAAlNLABMyNzg0NTU4MTIwMTU4MzExNDc2AAJTMQACMDE.*</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Replace with a session token after authenticating manually.</stringProp>
          </elementProp>
          <elementProp name="agency_submitter_login_token" elementType="Argument">
            <stringProp name="Argument.name">agency_submitter_login_token</stringProp>
            <stringProp name="Argument.value">AQIC5wM2LY4SfcxcwmbIaFmw7PgXoBNhJmBMRv4uhMFeOEY.*AAJTSQACMDUAAlNLABQtMTY1MjMxMTg3MjYyNzE1Njc1NAACUzEAAjAx*</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Replace with a session token after authenticating manually.</stringProp>
          </elementProp>
          <elementProp name="superuser_login_token" elementType="Argument">
            <stringProp name="Argument.name">superuser_login_token</stringProp>
            <stringProp name="Argument.value">AQIC5wM2LY4SfcwR3qVM5ipP0x_sxA56PYOo0a_esTeJZys.*AAJTSQACMDUAAlNLABQtNjI2ODQ5Njc1MzQwOTE5ODI4NQACUzEAAjAx*</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Replace with a session token after authenticating manually.</stringProp>
          </elementProp>
          <elementProp name="fal_org_id" elementType="Argument">
            <stringProp name="Argument.name">fal_org_id</stringProp>
            <stringProp name="Argument.value">100006688</stringProp>
            <stringProp name="Argument.desc">HRSA: 100008531; FAS: 100120624; GSA: 100006688</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="fbo_agency_admin_login_token" elementType="Argument">
            <stringProp name="Argument.name">fbo_agency_admin_login_token</stringProp>
            <stringProp name="Argument.value">AQIC5wM2LY4Sfcyni-sKeeqYb5iYoSz-yM_UA6NZYEPtA8c.*AAJTSQACMDUAAlNLABQtNjY3ODg4NTM3ODI4OTQ3MTE0NQACUzEAAjAx*</stringProp>
            <stringProp name="Argument.desc">Replace with a session token after authenticating manually.</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="fbo_contracting_officer_login_token" elementType="Argument">
            <stringProp name="Argument.name">fbo_contracting_officer_login_token</stringProp>
            <stringProp name="Argument.value">AQIC5wM2LY4SfcwimFgHlmEM_lgdxfLGbcdXxcFqRHPi4AU.*AAJTSQACMDUAAlNLABM4ODQ5NTY1NTM0MjUwOTMyMTk2AAJTMQACMDE.*</stringProp>
            <stringProp name="Argument.desc">Replace with a session token after authenticating manually.</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="fbo_superuser_login_token" elementType="Argument">
            <stringProp name="Argument.name">fbo_superuser_login_token</stringProp>
            <stringProp name="Argument.value">FBO_GU</stringProp>
            <stringProp name="Argument.desc">Replace with a session token after authenticating manually.</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="fbo_agency_admin_org_id" elementType="Argument">
            <stringProp name="Argument.name">fbo_agency_admin_org_id</stringProp>
            <stringProp name="Argument.value">300000221</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">DOT RM Organization (An office Id for RM Org hierarchy for opp creation)</stringProp>
          </elementProp>
          <elementProp name="fbo_contracting_officer_org_id" elementType="Argument">
            <stringProp name="Argument.name">fbo_contracting_officer_org_id</stringProp>
            <stringProp name="Argument.value">100120624</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">DHS RM Organization (An office Id for RM Org hierarchy for opp creation)</stringProp>
          </elementProp>
          <elementProp name="fbo_superuser_org_id" elementType="Argument">
            <stringProp name="Argument.name">fbo_superuser_org_id</stringProp>
            <stringProp name="Argument.value">100000136</stringProp>
            <stringProp name="Argument.desc">DHS RM Organization (An office Id for RM Org hierarchy for opp creation)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="fbo_agency_admin_email" elementType="Argument">
            <stringProp name="Argument.name">fbo_agency_admin_email</stringProp>
            <stringProp name="Argument.value">reitestuser+aa@gsa.gov</stringProp>
            <stringProp name="Argument.desc">FBO AA Email account</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="fbo_contracting_officer_email" elementType="Argument">
            <stringProp name="Argument.name">fbo_contracting_officer_email</stringProp>
            <stringProp name="Argument.value">reitestuser+co@gsa.gov</stringProp>
            <stringProp name="Argument.desc">FBO CO Email Accout</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="fbo_superuser_email" elementType="Argument">
            <stringProp name="Argument.name">fbo_superuser_email</stringProp>
            <stringProp name="Argument.value">reitestuser+FBO_GU@gsa.gov</stringProp>
            <stringProp name="Argument.desc">FBO GU Email Account</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">Used by Test Program API, Opportunity Modern API and Authenticated User Calls thread groups</stringProp>
      </Arguments>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
